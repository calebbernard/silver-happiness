IyEvdXNyL2Jpbi9weXRob24KCmltcG9ydCBvcwppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgcmFu
ZG9tCmltcG9ydCBzeXMKaW1wb3J0IGN1cnNlcwoKIyBnbG9iYWxzCkNPTFMgPSA4MApMSU5FUyA9
IDIzCk1BWFJPT01TID0gOQpNQVhUSElOR1MgPSA5Ck1BWE9CSiA9IDkKTUFYUEFDSyA9IDIzCk1B
WFRSQVBTID0gMTAKTlVNVEhJTkdTID0gNwoKCmZsYWdzID0geydJU0RBUksnOjAwMDAwMDEsJ0lT
Q1VSU0VEJzowMDAwMDAxLCdJU0JMSU5EJzowMDAwMDAxLAoJJ0lTR09ORSc6MDAwMDAwMiwnSVNL
Tk9XJzowMDAwMDAyLCdJU1JVTic6MDAwMDAwNCwnSVNGT1VORCc6MDAwMDAxMCwKCSdJU0lOVklT
JzowMDAwMDIwLCdJU01FQU4nOjAwMDAwNDAsJ0lTR1JFRUQnOjAwMDAxMDAsJ0lTQkxPQ0snOjAw
MDAyMDAsCgknSVNIRUxEJzowMDAwNDAwLCdJU0hVSCc6MDAwMTAwMCwnSVNSRUdFTic6MDAwMjAw
MCwnQ0FOSFVIJzowMDA0MDAwLAoJJ0NBTlNFRSc6MDAxMDAwMCwnSVNNSVNMJzowMDIwMDAwLCdJ
U0NBTkMnOjAwMjAwMDAsJ0lTTUFOWSc6MDA0MDAwMCwKCSdJU1NMT1cnOjAwNDAwMDAsJ0lTSEFT
VEUnOjAxMDAwMDB9Cgp0aWxlcyA9IHsnUEFTU0FHRSc6JyMnLCdET09SJzonKycsJ0ZMT09SJzon
LicsJ1BMQVlFUic6J0AnLCdUUkFQJzonXicsJ1RSQVBET09SJzonPicsCgknQVJST1dUUkFQJzon
eycsJ1NMRUVQVFJBUCc6JyQnLCdCRUFSVFJBUCc6J30nLCdURUxUUkFQJzonficsJ0RBUlRUUkFQ
JzonYCcsCgknU0VDUkVURE9PUic6JyYnLCdTVEFJUlMnOiclJywnR09MRCc6JyonLCdQT1RJT04n
OichJywnU0NST0xMJzonPycsJ01BR0lDJzonJCcsCgknRk9PRCc6JzonLCdXRUFQT04nOicpJywn
QVJNT1InOiddJywnQU1VTEVUJzonLCcsJ1JJTkcnOic9JywnU1RJQ0snOicvJ30KCiMgdmFycwph
bXVsZXQgPSAwCm1heF9sZXZlbCA9IDEKbGV2ZWwgPSAxCnNlZWQgPSByYW5kb20ucmFuZGludCgw
LDEwMDAwKQoKIyBHT0xEQ0FMQyA9IChyYW5kb20ucmFuZGludCg1MCArIDEwICogbGV2ZWwpICsg
MikKIyB3aW5hdCh5LCB4KSAobXZ3aW5jaChtdyx5LHgpPT0nICc/bXZ3aW5jaChzdGRzY3IseSx4
KTp3aW5jaChtdykpCiMgUk4gKCgoc2VlZCA9IHNlZWQqMTExMDkrMTM4NDkpICYgMHg3ZmZmKSA+
PiAxKQojIGNtb3YoeHkpIG1vdmUoKHh5KS55LCAoeHkpLngpCiMgaW5yb29tKHJwLCBjcCkgKCYm
IChjcCktPnkgPD0gKHJwKS0+cl9wb3MueSArICgocnApLT5yX21heC55IC0gMSkKIwkmJiAocnAp
LT5yX3Bvcy55IDw9IChjcCktPnkpCiMgdW5jKGNwKSAoY3ApLnksIChjcCkueAojIERJU1RBTkNF
KHkxLCB4MSwgeTIsIHgyKSAoKHgyIC0geDEpKih4MiAtIHgxKSArICh5MiAtIHkxKSooeTIgLSB5
MSkpCiMgY2UoYSwgYikgKChhKS54ID09IChiKS54ICYmIChhKS55ID09IChiKS55KQojIElTUklO
RyhoLHIpIChjdXJfcmluZ1toXSAhPSBOVUxMICYmIGN1cl9yaW5nW2hdLT5vX3doaWNoID09IHIp
CiMgSVNXRUFSSU5HKHIpIChJU1JJTkcoTEVGVCwgcikgfHwgSVNSSU5HKFJJR0hULCByKSkKIyBJ
U01VTFQodHlwZSkgKHR5cGUgPT0gUE9USU9OIHx8IHR5cGUgPT0gU0NST0xMIHx8IHR5cGUgPT0g
Rk9PRCkKCgojIGNsYXNzZXMKY2xhc3MgY29vcmQ6CglkZWYgX19pbml0X18oc2VsZiwgeCwgeSk6
CgkJc2VsZi54ID0geAoJCXNlbGYueSA9IHkKCmNsYXNzIHJvb206CglkZWYgX19pbml0X18oc2Vs
Ziwgcl9wb3MsIHJfbWF4LCByX2dvbGQsIHJfZ29sZHZhbCwgcl9mbGFncywgcl9uZXhpdHMsIHJf
ZXhpdCk6CgkJc2VsZi5yX3BvcyA9IGNvb3JkKHJfcG9zLngscl9wb3MueSkKCQlzZWxmLnJfbWF4
ID0gY29vcmQocl9tYXgueCxyX21heC55KQoJCXNlbGYucl9nb2xkID0gY29vcmQocl9nb2xkLngs
cl9nb2xkLnkpCgkJc2VsZi5yX2dvbGR2YWwgPSByX2dvbGR2YWwKCQlzZWxmLnJfZmxhZ3MgPSBy
X2ZsYWdzCgkJc2VsZi5yX25leGl0cyA9IHJfbmV4aXRzCgkJc2VsZi5yX2V4aXQgPSBbY29vcmQo
cl9leGl0WzBdLngscl9leGl0WzBdLnkpLGNvb3JkKHJfZXhpdFsxXS54LHJfZXhpdFsxXS55KSwK
CQkJCQkJY29vcmQocl9leGl0WzJdLngscl9leGl0WzJdLnkpLGNvb3JkKHJfZXhpdFszXS54LHJf
ZXhpdFszXS55KV0KCmNsYXNzIHJkZXM6CglkZWYgX19pbml0X18oc2VsZiwgY29ubiwgaXNjb25u
LCBpbmdyYXBoKToKCQlzZWxmLmNvbm4gPSBjb25uCgkJc2VsZi5pc2Nvbm4gPSBpc2Nvbm4KCQlz
ZWxmLmluZ3JhcGggPSBpbmdyYXBoCgpjbGFzcyB0cmFwOgoJZGVmIF9faW5pdF9fKHNlbGYsIHRy
X3BvcywgdHJfdHlwZSwgdHJfZmxhZ3MpOgoJCXNlbGYudHJfcG9zID0gY29vcmQodHJfcG9zLngs
IHRyX3Bvcy55KQoJCXNlbGYudHJfdHlwZSA9IHRyX3R5cGUKCQlzZWxmLnRyX2ZsYWdzID0gdHJf
ZmxhZ3MKCmNsYXNzIHN0cl90OgoJZGVmIF9faW5pdF9fKHNlbGYsc3Rfc3RyLHN0X2FkZCk6CgkJ
c2VsZi5zdF9zdHIgPSBzdF9zdHIKCQlzZWxmLnN0X2FkZCA9IHN0X2FkZAoKY2xhc3MgbWFnaWNf
aXRlbToKCWRlZiBfX2luaXRfXyhzZWxmLCBtaV9uYW1lLCBtaV9wcm9iLCBtaV93b3J0aCk6CgkJ
c2VsZi5taV9uYW1lID0gbWlfbmFtZQoJCXNlbGYubWlfcHJvYiA9IG1pX3Byb2IKCQlzZWxmLm1p
X3dvcnRoID0gbWlfd29ydGgKCmNsYXNzIHN0YXRzOgoJZGVmIF9faW5pdF9fKHNlbGYsIHNfc3Ry
LCBzX2V4cCwgc19sdmwsIHNfYXJtLCBzX2hwdCwgc19kbWcpOgoJCXNlbGYuc19zdHIgPSBzdHJf
dChzX3N0ci5zdF9zdHIsIHNfc3RyLnN0X2FkZCkKCQlzZWxmLnNfZXhwID0gc19leHAKCQlzZWxm
LnNfbHZsID0gc19sdmwKCQlzZWxmLnNfYXJtID0gc19hcm0KCQlzZWxmLnNfaHB0ID0gc19ocHQK
CQlzZWxmLnNfZG1nID0gc19kbWcKCmNsYXNzIHRoaW5nOgoJZGVmIF9faW5pdF9fKHNlbGYsdF9w
b3MsdF90dXJuLHRfdHlwZSx0X2Rpc2d1aXNlLHRfb2xkY2gsdF9kZXN0LHRfZmxhZ3MsdF9zdGF0
cyx0X3BhY2spOgoJCXNlbGYudF9wb3MgPSBjb29yZCh0X3Bvcy54LHRfcG9zLnkpCgkJc2VsZi50
X3R1cm4gPSB0X3R1cm4KCQlzZWxmLnRfdHlwZSA9IHRfdHlwZQoJCXNlbGYudF9kaXNndWlzZSA9
IHRfZGlzZ3Vpc2UKCQlzZWxmLnRfb2xkY2ggPSB0X29sZGNoCgkJc2VsZi50X2Rlc3QgPSBjb29y
ZCh0X2Rlc3QueCwgdF9kZXN0LnkpCgkJc2VsZi50X2ZsYWdzID0gdF9mbGFncwoJCXNlbGYudF9z
dGF0cyA9IHN0YXRzKHRfc3RhdHMuc19zdHIsIHRfc3RhdHMuc19leHAsIHRfc3RhdHMuc19sdmws
IHRfc3RhdHMuc19hcm0sIHRfc3RhdHMuc19ocHQsIHRfc3RhdHMuc19kbWcpCgkJc2VsZi50X3Bh
Y2sgPSB0X3BhY2sKCmNsYXNzIG1vbnN0ZXI6CglkZWYgX19pbml0X18oc2VsZiwgbV9uYW1lLCBt
X2NhcnJ5LCBtX2ZsYWdzLCBtX3N0YXRzKToKCQlzZWxmLm1fbmFtZSA9IG1fbmFtZQoJCXNlbGYu
bV9jYXJyeSA9IG1fY2FycnkKCQlzZWxmLm1fZmxhZ3MgPSBtX2ZsYWdzCgkJc2VsZi5tX3N0YXRz
ID0gc3RhdHMobV9zdGF0cy5zX3N0ciwgbV9zdGF0cy5zX2V4cCwgbV9zdGF0cy5zX2x2bCwgbV9z
dGF0cy5zX2FybSwgbV9zdGF0cy5zX2hwdCwgbV9zdGF0cy5zX2RtZykKCmNsYXNzIG9iamVjdDoK
CWRlZiBfX2luaXRfXyhzZWxmLCBvX3R5cGUsIG9fcG9zLCBvX2xhdW5jaCwgb19kYW1hZ2Usb19o
dXJsZG1nLCBvX2NvdW50LCBvX3doaWNoLCBvX2hwbHVzLCBvX2RwbHVzLCBvX2FjLCBvX2ZsYWdz
LCBvX2dyb3VwKToKCQlzZWxmLm9fdHlwZSA9IG9fdHlwZQoJCXNlbGYub19wb3MgPSBjb29yZChv
X3Bvcy54LCBvX3Bvcy55KQoJCXNlbGYub19sYXVuY2ggPSBvX2xhdW5jaAoJCXNlbGYub19kYW1h
Z2UgPSBvX2RhbWFnZQoJCXNlbGYub19odXJsZG1nID0gb19odXJsZG1nCgkJc2VsZi5vX2NvdW50
ID0gb19jb3VudAoJCXNlbGYub193aGljaCA9IG9fd2hpY2gKCQlzZWxmLm9faHBsdXMgPSBvX2hw
bHVzCgkJc2VsZi5vX2RwbHVzID0gb19kcGx1cwoJCXNlbGYub19hYyA9IG9fYWMKCQlzZWxmLm9f
ZmxhZ3MgPSBvX2ZsYWdzCgkJc2VsZi5vX2dyb3VwID0gb19ncm91cAoKIyBmdW5jdGlvbnMKCmRl
ZiBybmQocmFuZ2UpOgoJZ2xvYmFsIHNlZWQKCWlmIHJhbmdlID09IDA6CgkJcmV0dXJuIDAKCWVs
c2U6CgkJc2VlZCA9ICgoc2VlZCAqIDExMTA5ICsgMTM4NDgpICYgMHg3ZmZmZikgPj4gMQoJCXJl
dHVybiBhYnMoc2VlZCkgJSByYW5nZQoKCmRlZiB2ZXJ0KGNudCk6Cgl5LCB4ID0gc3Rkc2NyLmdl
dHl4KCkKCXggLT0gMQoJd2hpbGUgY250ID4gMDoKCQl5ICs9IDEKCQlzdGRzY3IubW92ZSh5LHgp
CgkJc3Rkc2NyLmFkZGNoKCd8JykKCQljbnQgLT0gMQoKZGVmIGhvcml6KGNudCk6Cgl3aGlsZSBj
bnQgPiAwOgoJCXN0ZHNjci5hZGRjaCgnLScpCgkJY250IC09IDEKCmRlZiBybmRfcG9zKHJvb20p
OgoJbmV3Y29vcmQgPSBjb29yZCgwLDApCgluZXdjb29yZC54ID0gcm9vbS5yX3Bvcy54ICsgcm5k
KHJvb20ucl9tYXgueCAtIDIpICsgMQoJbmV3Y29vcmQueSA9IHJvb20ucl9wb3MueSArIHJuZChy
b29tLnJfbWF4LnkgLSAyKSArIDEKCXJldHVybiBuZXdjb29yZAoKZGVmIGRyYXdfcm9vbShyb29t
KToKCXN0ZHNjci5tb3ZlKHJvb20ucl9wb3MueSwgcm9vbS5yX3Bvcy54KzEpCgl2ZXJ0KHJvb20u
cl9tYXgueS0yKQoJc3Rkc2NyLm1vdmUocm9vbS5yX3Bvcy55K3Jvb20ucl9tYXgueS0xLCByb29t
LnJfcG9zLngpCglob3Jpeihyb29tLnJfbWF4LngpCglzdGRzY3IubW92ZShyb29tLnJfcG9zLnks
cm9vbS5yX3Bvcy54KQoJaG9yaXoocm9vbS5yX21heC54KQoJdmVydChyb29tLnJfbWF4LnktMikK
CWZvciBqIGluIHJhbmdlKDEscm9vbS5yX21heC55LTEpOgoJCXN0ZHNjci5tb3ZlKHJvb20ucl9w
b3MueSArIGosIHJvb20ucl9wb3MueCsxKQoJCWZvciBrIGluIHJhbmdlKDEscm9vbS5yX21heC54
LTEpOgoJCQlzdGRzY3IuYWRkY2godGlsZXNbJ0ZMT09SJ10pCglpZiByb29tLnJfZ29sZHZhbCAh
PSAwOgoJCXN0ZHNjci5hZGRjaChyb29tLnJfZ29sZC55LCByb29tLnJfZ29sZC54LCB0aWxlc1sn
R09MRCddKQoKZGVmIHJuZF9yb29tKCk6CglnbG9iYWwgcm9vbXMKCXJtID0gcm5kKE1BWFJPT01T
KQoJd2hpbGUgcm9vbXNbcm1dLnJfZmxhZ3MgJiBmbGFnc1snSVNHT05FJ106CgkJcm0gPSBybmQo
TUFYUk9PTVMpCglyZXR1cm4gcm0KCmRlZiBkb19yb29tcygpOgoJZ2xvYmFsIHJvb21zCglic3pl
ID0gY29vcmQoQ09MUy8zLCBMSU5FUy8zKQoJZm9yIGkgaW4gcm9vbXM6CgkJaS5yX2dvbGR2YWwg
PSBpLnJfbmV4aXRzID0gaS5yX2ZsYWdzID0gMAoJbGVmdF9vdXQgPSBybmQoNCkKCWZvciBpIGlu
IHJhbmdlKGxlZnRfb3V0KToKCQlyb29tc1tybmRfcm9vbSgpXS5yX2ZsYWdzIHw9IGZsYWdzWydJ
U0dPTkUnXQoJZm9yIGkgaW4gcmFuZ2UoTUFYUk9PTVMpOgoJCXRvcCA9IGNvb3JkKChpJTMpKmJz
emUueCArIDEsaS8zKmJzemUueSkKCQlpZiByb29tc1tpXS5yX2ZsYWdzICYgZmxhZ3NbJ0lTR09O
RSddOgoJCQlyb29tc1tpXS5yX3Bvcy54ID0gdG9wLnggKyBybmQoYnN6ZS54LTIpKzEKCQkJcm9v
bXNbaV0ucl9wb3MueSA9IHRvcC55ICsgcm5kKGJzemUueS0yKSsxCgkJCXJvb21zW2ldLnJfbWF4
LnggPSAtQ09MUwoJCQlyb29tc1tpXS5yX21heC55ID0gLUxJTkVTCgkJCXdoaWxlIHJvb21zW2ld
LnJfcG9zLnkgPD0gMCBhbmQgcm9vbXNbaV0ucl9wb3MueSA+PSBMSU5FUy0xOgoJCQkJcm9vbXNb
aV0ucl9wb3MueCA9IHRvcC54ICsgcm5kKGJzemUueC0yKSsxCgkJCQlyb29tc1tpXS5yX3Bvcy55
ID0gdG9wLnkgKyBybmQoYnN6ZS55LTIpKzEKCQkJCXJvb21zW2ldLnJfbWF4LnggPSAtQ09MUwoJ
CQkJcm9vbXNbaV0ucl9tYXgueSA9IC1MSU5FUwoJCQljb250aW51ZQoJCWlmIHJuZCgxMCkgPCBs
ZXZlbCAtIDE6CgkJCXJvb21zW2ldLnJfZmxhZ3MgfD0gZmxhZ3NbJ0lTREFSSyddCgkJcm9vbXNb
aV0ucl9tYXgueCA9IHJuZChic3plLngtNCkrNAoJCXJvb21zW2ldLnJfbWF4LnkgPSBybmQoYnN6
ZS55LTQpKzQKCQlyb29tc1tpXS5yX3Bvcy54ID0gdG9wLnggKyBybmQoYnN6ZS54IC0gcm9vbXNb
aV0ucl9tYXgueCkKCQlyb29tc1tpXS5yX3Bvcy55ID0gdG9wLnkgKyBybmQoYnN6ZS55IC0gcm9v
bXNbaV0ucl9tYXgueSkKCQl3aGlsZSByb29tc1tpXS5yX3Bvcy55ID09IDA6CgkJCXJvb21zW2ld
LnJfbWF4LnggPSBybmQoYnN6ZS54LTQpKzQKCQkJcm9vbXNbaV0ucl9tYXgueSA9IHJuZChic3pl
LnktNCkrNAoJCQlyb29tc1tpXS5yX3Bvcy54ID0gdG9wLnggKyBybmQoYnN6ZS54IC0gcm9vbXNb
aV0ucl9tYXgueCkKCQkJcm9vbXNbaV0ucl9wb3MueSA9IHRvcC55ICsgcm5kKGJzemUueSAtIHJv
b21zW2ldLnJfbWF4LnkpCgoJCSNHb2xkCgkJaWYgcm5kKDEwMCkgPCA1MCBhbmQgKGFtdWxldCA9
PSAwIG9yIGxldmVsID49IG1heF9sZXZlbCk6CgkJCXJvb21zW2ldLnJfZ29sZHZhbCA9IHJuZCg1
MCArIDEwICogbGV2ZWwpICsgMgoJCQlyb29tc1tpXS5yX2dvbGQgPSBybmRfcG9zKHJvb21zW2ld
KQoKCQlkcmF3X3Jvb20ocm9vbXNbaV0pCgpkZWYgZG9vcihyb29tLCBjb29yZCk6CglzdGRzY3Iu
bW92ZShjb29yZC55LCBjb29yZC54KQoJaWYgcm5kKDEwKSA8IGxldmVsIC0gMSBhbmQgcm5kKDEw
MCkgPCAyMDoKCQlzdGRzY3IuYWRkY2godGlsZXNbJ1NFQ1JFVERPT1InXSkKCWVsc2U6CgkJc3Rk
c2NyLmFkZGNoKHRpbGVzWydET09SJ10pCglyb29tLnJfZXhpdFtyb29tLnJfbmV4aXRzXS54ID0g
Y29vcmQueAoJcm9vbS5yX2V4aXRbcm9vbS5yX25leGl0c10ueSA9IGNvb3JkLnkKCXJvb20ucl9u
ZXhpdHMgKz0gMQoKZGVmIGNvbm4ocjEsIHIyKToKCWdsb2JhbCByb29tcwoJaWYgcjEgPCByMjoK
CQlybSA9IHIxCgkJaWYgcjEgKyAxID09IHIyOgoJCQlkaXJlYyA9ICdyJwoJCWVsc2U6CgkJCWRp
cmVjID0gJ2QnCgllbHNlOgoJCXJtID0gcjIKCQlpZiByMiArIDEgPT0gcjE6CgkJCWRpcmVjID0g
J3InCgkJZWxzZToKCQkJZGlyZWMgPSAnZCcKCXJwZiA9IHJvb21zW3JtXQoJIyBTZXQgdXAgdGhl
IG1vdmVtZW50IHZhcmlhYmxlcywgaW4gdHdvIGNhc2VzOgoJIyBmaXJzdCBkcmF3aW5nIG9uZSBk
b3duLgoJaWYgZGlyZWMgPT0gJ2QnOgoJCXJtdCA9IHJtICsgMwkjIHJvb20gIyBvZiBkZXN0CgkJ
cnB0ID0gcm9vbXNbcm10XQkjIHJvb20gcG9pbnRlciBvZiBkZXN0CgkJcGRlbHRhID0gY29vcmQo
MCwxKSAjIGRpcmVjdGlvbiBvZiBtb3ZlCgkJc3BvcyA9IGNvb3JkKHJwZi5yX3Bvcy54LCBycGYu
cl9wb3MueSkgIyBzdGFydCBvZiBtb3ZlCgkJZXBvcyA9IGNvb3JkKHJwdC5yX3Bvcy54LCBycHQu
cl9wb3MueSkgIyBlbmQgb2YgbW92ZQoJCWlmIHJwZi5yX2ZsYWdzICYgZmxhZ3NbJ0lTR09ORSdd
ID09IDA6CSMgaWYgbm90IGdvbmUgcGljayBkb29yIHBvcwoJCQlzcG9zLnggKz0gcm5kKHJwZi5y
X21heC54LTIpKzEgIyBwaWNrcyBhIHJhbmRvbSBub24tY29ybmVyIG9uIHRvcAoJCQlzcG9zLnkg
Kz0gcnBmLnJfbWF4LnktMSAjIG1vdmVzIGZyb20gdG9wIHRvIGJvdHRvbQoJCWlmIHJwdC5yX2Zs
YWdzICYgZmxhZ3NbJ0lTR09ORSddID09IDA6CgkJCWVwb3MueCArPSBybmQocnB0LnJfbWF4Lngt
MikrMSAjIGluIHRoZSBkZXN0LiByb29tLCB3ZSBzdGF5IG9uIHRoZSB0b3AKCQlkaXN0YW5jZSA9
IGFicyhzcG9zLnktZXBvcy55KSAtIDEJIyBkaXN0YW5jZSB0byBtb3ZlCgkJdHVybl9kZWx0YSA9
IGNvb3JkKDAsMCkJIyBkaXJlY3Rpb24gdG8gdHVybgoJCWlmIHNwb3MueCA8IGVwb3MueDoKCQkJ
dHVybl9kZWx0YS54ID0gMQoJCWVsc2U6CgkJCXR1cm5fZGVsdGEueCA9IC0xCgkJdHVybl9kaXN0
YW5jZSA9IGFicyhzcG9zLnggLSBlcG9zLngpCSMgaG93IGZhciB0byB0dXJuCgkJdHVybl9zcG90
ID0gcm5kKGRpc3RhbmNlLTEpICsgMQkjIHdoZXJlIHR1cm4gc3RhcnRzCgllbGlmIGRpcmVjID09
ICdyJzoJIyBzZXR1cCBmb3IgbW92aW5nIHJpZ2h0CgkJcm10PXJtKzEKCQlycHQgPSByb29tc1ty
bXRdCgkJcGRlbHRhPWNvb3JkKDEsMCkKCQlzcG9zID0gY29vcmQocnBmLnJfcG9zLngsIHJwZi5y
X3Bvcy55KQoJCWVwb3MgPSBjb29yZChycHQucl9wb3MueCwgcnB0LnJfcG9zLnkpCgkJaWYgcnBm
LnJfZmxhZ3MgJiBmbGFnc1snSVNHT05FJ10gPT0gMDoKCQkJc3Bvcy54ICs9IHJwZi5yX21heC54
LTEgIyBNb3ZlIHRvIHJpZ2h0IHNpZGUKCQkJc3Bvcy55ICs9IHJuZChycGYucl9tYXgueS0yKSsx
ICMgcGljayBhIHJhbmRvbSBub24tY29ybmVyIG9uIHJpZ2h0IHNpZGUKCQlpZiBycHQucl9mbGFn
cyAmIGZsYWdzWydJU0dPTkUnXSA9PSAwOgoJCQllcG9zLnkgKz0gcm5kKHJwdC5yX21heC55LTIp
KzEgIyBzdGF5IG9uIHRoZSBsZWZ0IGZvciBkZXN0CgkJZGlzdGFuY2UgPSBhYnMoc3Bvcy54LWVw
b3MueCkgLSAxCgkJdHVybl9kZWx0YSA9IGNvb3JkKDAsMCkKCQlpZiBzcG9zLnkgPCBlcG9zLnk6
CgkJCXR1cm5fZGVsdGEueSA9IDEKCQllbHNlOgoJCQl0dXJuX2RlbHRhLnkgPSAtMQoJCXR1cm5f
ZGlzdGFuY2UgPSBhYnMoc3Bvcy55IC0gZXBvcy55KQoJCXR1cm5fc3BvdCA9IHJuZChkaXN0YW5j
ZS0xKSArIDEKCWVsc2U6CgkJcHJpbnQgIkZhdGFsIGVycm9yIGluIHBhc3NhZ2VzIgoJIyBEcmF3
IGluIHRoZSBkb29ycyBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgcGFzc2FnZSBvciBqdXN0IHB1dCAj
J3MKCSMgaWYgdGhlIHJvb21zIGFyZSBnb25lLgoJaWYgcnBmLnJfZmxhZ3MgJiBmbGFnc1snSVNH
T05FJ10gPT0gMDoKCQlkb29yKHJwZiwgc3BvcykKCWVsc2U6CgkJc3Rkc2NyLm1vdmUoc3Bvcy55
LHNwb3MueCkKCQlzdGRzY3IuYWRkY2godGlsZXNbJ1BBU1NBR0UnXSkKCWlmIHJwdC5yX2ZsYWdz
ICYgZmxhZ3NbJ0lTR09ORSddID09IDA6CgkJZG9vcihycHQsIGVwb3MpCgllbHNlOgoJCXN0ZHNj
ci5tb3ZlKGVwb3MueSxlcG9zLngpCgkJc3Rkc2NyLmFkZGNoKCcjJykKCSMgR2V0IHJlYWR5IHRv
IG1vdmUuLi4KCWN1cnIgPSBjb29yZChzcG9zLngsIHNwb3MueSkKCXdoaWxlIGRpc3RhbmNlICE9
IDA6CgkJIyBNb3ZlIHRvIG5ldyBwb3NpdGlvbgoJCWN1cnIueCArPSBwZGVsdGEueAoJCWN1cnIu
eSArPSBwZGVsdGEueQoJCSMgQ2hlY2sgaWYgd2UgYXJlIGF0IHRoZSB0dXJuIHBsYWNlLCBpZiBz
byBkbyB0aGUgdHVybgoJCWlmIGRpc3RhbmNlID09IHR1cm5fc3BvdCBhbmQgdHVybl9kaXN0YW5j
ZSA+IDA6CgkJCXdoaWxlIHR1cm5fZGlzdGFuY2UgIT0gMDoKCQkJCXR1cm5fZGlzdGFuY2UgLT0g
MQoJCQkJc3Rkc2NyLm1vdmUoY3Vyci55LGN1cnIueCkKCQkJCXN0ZHNjci5hZGRjaCh0aWxlc1sn
UEFTU0FHRSddKQoJCQkJc3Rkc2NyLnJlZnJlc2goKQoJCQkJY3Vyci54ICs9IHR1cm5fZGVsdGEu
eAoJCQkJY3Vyci55ICs9IHR1cm5fZGVsdGEueQoJCSMgQ29udGludWUgZGlnZ2luZyBhbG9uZwoJ
CXN0ZHNjci5tb3ZlKGN1cnIueSxjdXJyLngpCgkJc3Rkc2NyLmFkZGNoKHRpbGVzWydQQVNTQUdF
J10pCgkJc3Rkc2NyLnJlZnJlc2goKQoJCWRpc3RhbmNlIC09IDEKCWN1cnIueCArPSBwZGVsdGEu
eAoJY3Vyci55ICs9IHBkZWx0YS55CgkjaWYgY3Vyci54ICE9IGVwb3MueCBvciBjdXJyLnkgIT0g
ZXBvcy55OgoJCSNwcmludCAiZXJyb3IgMSIKCgpkZWYgZG9fcGFzc2FnZXMoKToKCW5ld3JkZXMg
PSBbCgkJcmRlcyhbIDAsIDEsIDAsIDEsIDAsIDAsIDAsIDAsIDAgXSwgWyAwLCAwLCAwLCAwLCAw
LCAwLCAwLCAwLCAwIF0sIDApLAoJCXJkZXMoWyAxLCAwLCAxLCAwLCAxLCAwLCAwLCAwLCAwIF0s
IFsgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCBdLCAwKSwKCQlyZGVzKFsgMCwgMSwgMCwgMCwg
MCwgMSwgMCwgMCwgMCBdLCBbIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAgXSwgMCksCgkJcmRl
cyhbIDEsIDAsIDAsIDAsIDEsIDAsIDEsIDAsIDAgXSwgWyAwLCAwLCAwLCAwLCAwLCAwLCAwLCAw
LCAwIF0sIDApLAoJCXJkZXMoWyAwLCAxLCAwLCAxLCAwLCAxLCAwLCAxLCAwIF0sIFsgMCwgMCwg
MCwgMCwgMCwgMCwgMCwgMCwgMCBdLCAwKSwKCQlyZGVzKFsgMCwgMCwgMSwgMCwgMSwgMCwgMCwg
MCwgMSBdLCBbIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAgXSwgMCksCgkJcmRlcyhbIDAsIDAs
IDAsIDEsIDAsIDAsIDAsIDEsIDAgXSwgWyAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwIF0sIDAp
LAoJCXJkZXMoWyAwLCAwLCAwLCAwLCAxLCAwLCAxLCAwLCAxIF0sIFsgMCwgMCwgMCwgMCwgMCwg
MCwgMCwgMCwgMCBdLCAwKSwKCQlyZGVzKFsgMCwgMCwgMCwgMCwgMCwgMSwgMCwgMSwgMCBdLCBb
IDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAgXSwgMCldCiAgICAjIHJlaW5pdGlhbGl6ZSByb29t
IGdyYXBoIGRlc2NyaXB0aW9uCglmb3IgaSBpbiByYW5nZShNQVhST09NUyk6CgkJcjEgPSBuZXdy
ZGVzW2ldCgkJZm9yIGogaW4gcmFuZ2UoTUFYUk9PTVMpOgoJCQlyMS5pc2Nvbm5bal0gPSAwCgkJ
cjEuaW5ncmFwaCA9IDAKCSMgc3RhcnRpbmcgd2l0aCBvbmUgcm9vbSwgY29ubmVjdCBpdCB0byBh
IHJhbmRvbSBhZGphY2VudCByb29tIGFuZAogICAJIyB0aGVuIHBpY2sgYSBuZXcgcm9vbSB0byBz
dGFydCB3aXRoLgoJcm9vbWNvdW50ID0gMQoJcjEgPSBuZXdyZGVzW3JuZChNQVhST09NUyldCgly
MS5pbmdyYXBoID0gMQoJd2hpbGUgcm9vbWNvdW50IDwgTUFYUk9PTVM6CgkJI2ZvciB4IGluIG5l
d3JkZXM6CgkJIyBmaW5kIGEgcm9vbSB0byBjb25uZWN0IHdpdGgKCQlqID0gMAoJCWZvciBpIGlu
IHJhbmdlKE1BWFJPT01TKToKCQkJaWYgcjEuY29ubltpXSA9PSAxIGFuZCBuZXdyZGVzW2ldLmlu
Z3JhcGggPT0gMDoKCQkJCWogKz0gMQoJCQkJaWYgcm5kKGopID09IDA6CgkJCQkJcjIgPSBuZXdy
ZGVzW2ldCgkJIyBpZiBubyBhZGphY2VudCByb29tcyBhcmUgb3V0c2lkZSB0aGUgZ3JhcGgsIHBp
Y2sgYSBuZXcgcm9vbQoJCSMgdG8gbG9vayBmcm9tCgkJaWYgaiA9PSAwOgoJCQlyMSA9IG5ld3Jk
ZXNbcm5kKE1BWFJPT01TKV0KCQkJd2hpbGUgcjEuaW5ncmFwaCA9PSAwOgoJCQkJcjEgPSBuZXdy
ZGVzW3JuZChNQVhST09NUyldCgkJIyBvdGhlcndpc2UsIGNvbm5lY3QgbmV3IHJvb20gdG8gdGhl
IGdyYXBoLCBhbmQgZHJhdyBhIHR1bm5lbAoJCSMgdG8gaXQKCQllbHNlOgoJCQlyMi5pbmdyYXBo
ID0gMQoJCQlpID0gbmV3cmRlcy5pbmRleChyMSkKCQkJaiA9IG5ld3JkZXMuaW5kZXgocjIpCgkJ
CWNvbm4oaSxqKQoJCQlyMS5pc2Nvbm5bal0gPSAxCgkJCXIyLmlzY29ubltpXSA9IDEKCQkJcm9v
bWNvdW50ICs9IDEKCSMgYXR0ZW1wdCB0byBhZGQgcGFzc2FnZXMgdG8gdGhlIGdyYXBoIGEgcmFu
ZG9tIG51bWJlciBvZiB0aW1lcyBzbwogICAgIyB0aGF0IHRoZXJlIGlzbid0IGp1c3Qgb25lIHVu
aXF1ZSBwYXNzYWdlIHRocm91Z2ggaXQuCglmb3IgaSBpbiByYW5nZShybmQoNSkpOgoJCXIxID0g
bmV3cmRlc1tybmQoTUFYUk9PTVMpXSAjIGEgcmFuZG9tIHJvb20gdG8gbG9vayBmcm9tCgkJIyBm
aW5kIGFuIGFkamFjZW50IHJvb20gbm90IGFscmVhZHkgY29ubmVjdGVkCgkJaiA9IDAKCQlmb3Ig
aSBpbiByYW5nZShNQVhST09NUyk6CgkJCWlmIHIxLmNvbm5baV0gPT0gMSBhbmQgcjEuaXNjb25u
W2ldID09IDA6CgkJCQlqICs9IDEKCQkJCWlmIHJuZChqKSA9PSAwOgoJCQkJCXIyPW5ld3JkZXNb
aV0KCQlpZiBqICE9IDA6CgkJCWkgPSBuZXdyZGVzLmluZGV4KHIxKQoJCQlqID0gbmV3cmRlcy5p
bmRleChyMikKCQkJY29ubihpLGopCgkJCXIxLmlzY29ubltqXSA9IDEKCQkJcjIuaXNjb25uW2ld
ID0gMQoKCgpkZWYgbmV3X2xldmVsKCk6CglzdGRzY3IuZXJhc2UoKQoJZ2xvYmFsIGxldmVsLCBt
YXhfbGV2ZWwsIG5vX2Zvb2QsIHBsYXllcgoJaWYgbGV2ZWwgPiBtYXhfbGV2ZWw6CgkJbWF4X2xl
dmVsID0gbGV2ZWwKCWRvX3Jvb21zKCkKCWRvX3Bhc3NhZ2VzKCkKCW5vX2Zvb2QgKz0gMQoJIyBQ
dXRfdGhpbmdzKCkKCSMgQWRkIHN0YWlycwoJcm0gPSBybmRfcm9vbSgpCglzdGFpcnMgPSBybmRf
cG9zKHJvb21zW3JtXSkKCXN0ZHNjci5hZGRjaChzdGFpcnMueSwgc3RhaXJzLngsIHRpbGVzWydT
VEFJUlMnXSkKCSMgQWRkIHRyYXBzCglpZiAocm5kKDEwKSA8IGxldmVsKToKCQludHJhcHMgPSBy
bmQobGV2ZWwvNCkgKyAxCgkJaWYgKG50cmFwcyA+IE1BWFRSQVBTKToKCQkJbnRyYXBzID0gTUFY
VFJBUFMKCQlpID0gbnRyYXBzCgkJd2hpbGUgaSAhPSAwOgoJCQlpIC09IDEKCQkJcm0gPSBybmRf
cm9vbSgpCgkJCXRyYXBwb3MgPSBybmRfcG9zKHJvb21zW3JtXSkKCQkJeCA9IHJuZCg2KQoJCQlp
ZiB4ID09IDA6CgkJCQljaCA9IHRpbGVzWydUUkFQRE9PUiddCgkJCWVsaWYgeCA9PSAxOgoJCQkJ
Y2ggPSB0aWxlc1snQkVBUlRSQVAnXQoJCQllbGlmIHggPT0gMjoKCQkJCWNoID0gdGlsZXNbJ1NM
RUVQVFJBUCddCgkJCWVsaWYgeCA9PSAzOgoJCQkJY2ggPSB0aWxlc1snQVJST1dUUkFQJ10KCQkJ
ZWxpZiB4ID09IDQ6CgkJCQljaCA9IHRpbGVzWydURUxUUkFQJ10KCQkJZWxzZToKCQkJCWNoID0g
dGlsZXNbJ0RBUlRUUkFQJ10KCQkJc3Rkc2NyLmFkZGNoKHRyYXBwb3MueSwgdHJhcHBvcy54LCB0
aWxlc1snVFJBUCddKQoJCQl0cmFwc1tpXS50cl90eXBlID0gY2gKCQkJdHJhcHNbaV0udHJfZmxh
Z3MgPSAwCgkJCXRyYXBzW2ldLnRyX3BvcyA9IHRyYXBwb3MKCSMgQWRkIGxpZ2h0CglybSA9IHJu
ZF9yb29tKCkKCXBsYXllcnBvcyA9IHJuZF9wb3Mocm9vbXNbcm1dKQoJb2xkY2ggPSBjaHIoc3Rk
c2NyLmluY2gocGxheWVycG9zLnksIHBsYXllcnBvcy54KSAmIDB4MDBGRikKCXBsYXllci50X29s
ZGNoID0gb2xkY2gKCXN0ZHNjci5hZGRjaChwbGF5ZXJwb3MueSwgcGxheWVycG9zLngsIHRpbGVz
WydQTEFZRVInXSkKCXBsYXllci50X3BvcyA9IHBsYXllcnBvcwoKZGVmIGluaXQoKToKCWdsb2Jh
bCBNQVhST09NUywgcm9vbXMsIGxldmVsLCBub19mb29kLCB0cmFwcywgcGxheWVyLCBtYXhfaHAs
IG1heF9zdGF0cwoJZW1wdHk9Y29vcmQoMCwwKQoJZW1wdHlfc3RyX3QgPSBzdHJfdCgwLDApCgll
bXB0eXN0YXRzPXN0YXRzKGVtcHR5X3N0cl90LDAsMCwwLDAsIiIpCglwYWNrID0gW10KCXJvb21z
ID0gW3Jvb20oZW1wdHksZW1wdHksZW1wdHksMCwwLDAsW2VtcHR5LGVtcHR5LGVtcHR5LGVtcHR5
XSkgZm9yIGkgaW4gcmFuZ2UoTUFYUk9PTVMpXQoJdHJhcHMgPSBbdHJhcChlbXB0eSwwLDApIGZv
ciBpIGluIHJhbmdlKE1BWFRSQVBTKV0KCXBsYXllciA9IHRoaW5nKGVtcHR5LDAsMCwwLCcuJyxl
bXB0eSwwLGVtcHR5c3RhdHMscGFjaykKCXBsYXllci50X3N0YXRzLnNfbHZsID0gMQoJcGxheWVy
LnRfc3RhdHMuc19leHAgPSAwTAoJbWF4X2hwID0gcGxheWVyLnRfc3RhdHMuc19ocHQgPSAxMgoJ
aWYgcm5kKDEwMCkgPT0gNzoKCQlwbGF5ZXIudF9zdGF0cy5zX3N0ci5zdF9zdHIgPSAxNgoJCXBs
YXllci50X3N0YXRzLnNfc3RyLnN0X2FkZCA9IDAKCWVsc2U6CgkJcGxheWVyLnRfc3RhdHMuc19z
dHIuc3Rfc3RyID0gMTYKCQlwbGF5ZXIudF9zdGF0cy5zX3N0ci5zdF9hZGQgPSAwCglwbGF5ZXIu
dF9zdGF0cy5zX2RtZyA9ICIxZDQiCglwbGF5ZXIudF9zdGF0cy5zX2FybSA9IDEwCgltYXhfc3Rh
dHMgPSBwbGF5ZXIudF9zdGF0cwoJaXRlbSA9IG9iamVjdCgwLGVtcHR5LDAsIiIsIiIsMCwwLDAs
MCwwLDAsMCkKCglsZXZlbCA9IDEKCXJhbmRvbS5zZWVkKCkKCW5vX2Zvb2QgPSAwCgluZXdfbGV2
ZWwoKQoKZGVmIHN0YXR1cygpOgoJZ2xvYmFsIGxldmVsCglwdXJzZSA9IDAKCWhwID0gMTIKCW1h
eGhwID0gMTIKCXN0cmVuZ3RoID0gMTYKCXN0YXR1cyA9ICJMZXZlbDogIiArIHN0cihsZXZlbCkg
KyAiIEdvbGQ6ICIgKyBzdHIocHVyc2UpICsgIiBIcDogIgoJc3RhdHVzICs9ICBzdHIoaHApICsg
IigiICsgc3RyKG1heGhwKSArICIpIFN0cjogIiArIHN0cihzdHJlbmd0aCkKCXN0ZHNjci5hZGRz
dHIoTElORVMgLSAxLCAwLCBzdGF0dXMpCgpkZWYgZG9fbW92ZShkeSxkeCk6CglnbG9iYWwgcGxh
eWVyCgluaCA9IGNvb3JkKHBsYXllci50X3Bvcy54ICsgZHgsIHBsYXllci50X3Bvcy55ICsgZHkp
CglpZiBuaC54IDwgMCBvciBuaC54ID4gQ09MUy0xIG9yIG5oLnkgPCAwIG9yIG5oLnkgPiBMSU5F
Uy0xOgoJCXJldHVybgoJY2ggPSBjaHIoc3Rkc2NyLmluY2gobmgueSwgbmgueCkgJiAweDAwRkYp
CglpZiBjaCA9PSAnICcgb3IgY2ggPT0gJ3wnIG9yIGNoID09ICctJzoKCQlyZXR1cm4KCXN0ZHNj
ci5hZGRjaChwbGF5ZXIudF9wb3MueSwgcGxheWVyLnRfcG9zLngsIHBsYXllci50X29sZGNoKQoJ
cGxheWVyLnRfb2xkY2ggPSBjaHIoc3Rkc2NyLmluY2gobmgueSwgbmgueCkgJiAweDAwRkYpCglz
dGRzY3IuYWRkY2gobmgueSwgbmgueCwgdGlsZXNbJ1BMQVlFUiddKQoJcGxheWVyLnRfcG9zID0g
bmgKCgpkZWYgY29tbWFuZCgpOgoJZ2xvYmFsIHBsYXllciwgbGV2ZWwKCXN0YXR1cygpCgljaCA9
IHN0ZHNjci5nZXRjaCgpCglpZiBjaCA9PSBvcmQoJ2gnKToKCQlkb19tb3ZlKDAsLTEpCglpZiBj
aCA9PSBvcmQoJ2onKToKCQlkb19tb3ZlKDEsMCkKCWlmIGNoID09IG9yZCgnaycpOgoJCWRvX21v
dmUoLTEsMCkKCWlmIGNoID09IG9yZCgnbCcpOgoJCWRvX21vdmUoMCwxKQoJaWYgY2ggPT0gb3Jk
KCd5Jyk6CgkJZG9fbW92ZSgtMSwtMSkKCWlmIGNoID09IG9yZCgndScpOgoJCWRvX21vdmUoLTEs
MSkKCWlmIGNoID09IG9yZCgnYicpOgoJCWRvX21vdmUoMSwtMSkKCWlmIGNoID09IG9yZCgnbicp
OgoJCWRvX21vdmUoMSwxKQoJaWYgY2ggPT0gb3JkKCdxJyk6CgkJc3lzLmV4aXQoKQoJaWYgY2gg
PT0gb3JkKCc+Jyk6CgkJaWYgcGxheWVyLnRfb2xkY2ggPT0gdGlsZXNbJ1NUQUlSUyddOgoJCQls
ZXZlbCArPSAxCgkJCW5ld19sZXZlbCgpCgpkZWYgbWFpbihzdGRzY3IpOgoJIyBzdGFydAoJaW5p
dCgpCgl3aGlsZSBUcnVlOgoJCWNvbW1hbmQoKQoKCmdyZWV0aW5nID0gIkhlbGxvLCAiICsgb3Mu
ZW52aXJvblsnVVNFUiddICsgIiwganVzdCBhIG1vbWVudCB3aGlsZSBJIGRpZyB0aGUgZHVuZ2Vv
bi4uLlxuIgpwcmludCBncmVldGluZwpzdGRzY3I9Y3Vyc2VzLmluaXRzY3IoKQpjdXJzZXMuY3Vy
c19zZXQoMCkKY3Vyc2VzLndyYXBwZXIobWFpbikK
